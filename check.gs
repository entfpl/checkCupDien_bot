// ======= C·∫§U H√åNH =======
const DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/xxx'; //THAY B·∫∞NG WEBHOOK C·ª¶A B·∫†N

// ======= G·ª¨I TIN NH·∫ÆN L√äN DISCORD =======
function sendDiscordMessage(content) {
  if (content.length > 1900) content = content.substring(0, 1900) + '\n... (tin nh·∫Øn qu√° d√†i, ƒë√£ c·∫Øt b·ªõt)';
  const options = {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify({ content }),
    muteHttpExceptions: true,
  };
  try {
    const response = UrlFetchApp.fetch(DISCORD_WEBHOOK_URL, options);
    Logger.log('ƒê√£ g·ª≠i Discord: ' + response.getResponseCode());
  } catch (e) {
    Logger.log('L·ªói g·ª≠i Discord: ' + e.toString());
  }
}

// ======= TRA C·ª®U L·ªäCH C√öP ƒêI·ªÜN THEO M√É KH =======
function getLichCupDien(maKhachHang) {
  if (!maKhachHang) return '‚ö†Ô∏è M√£ KH tr·ªëng.';

  const tz = Session.getScriptTimeZone();
  const today = new Date();
  const nextWeek = new Date(today.getTime() + 7 * 86400000);
  const tuNgay = Utilities.formatDate(today, tz, "dd-MM-yyyy");
  const denNgay = Utilities.formatDate(nextWeek, tz, "dd-MM-yyyy");

  const url = `https://www.cskh.evnspc.vn/TraCuu/GetThongTinLichNgungGiamCungCapDien?tuNgay=${tuNgay}&denNgay=${denNgay}&maKH=${encodeURIComponent(maKhachHang)}&ChucNang=MaKhachHang`;

  try {
    const html = UrlFetchApp.fetch(url, {
      headers: { 'User-Agent': 'Mozilla/5.0' },
      muteHttpExceptions: true
    }).getContentText();

    if (html.includes('kh√¥ng c√≥ l·ªãch ng·ª´ng gi·∫£m cung c·∫•p ƒëi·ªán')) {
      return `‚úÖ M√£ KH ${maKhachHang} - Kh√¥ng c√≥ l·ªãch c√∫p ƒëi·ªán t·ª´ ${tuNgay} ƒë·∫øn ${denNgay}.`;
    }

    const lichMatches = [...html.matchAll(/<div class="item">([\s\S]*?)<\/div>/g)];
    if (lichMatches.length === 0) return `‚ö†Ô∏è M√£ KH ${maKhachHang} - Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c l·ªãch c√∫p.`;

    let msg = `üîå M√£ KH ${maKhachHang} - C√≥ ${lichMatches.length} ƒë·ª£t c√∫p ƒëi·ªán:\n\n`;
    lichMatches.forEach((m, i) => {
      const b = m[1];
      const khuVuc = (b.match(/<strong>Khu v·ª±c: <\/strong>(.*?)<\/p>/) || [])[1]?.trim() || 'Kh√¥ng r√µ';
      const tu = (b.match(/<strong>T·ª´: <\/strong>(.*?)<br>/) || [])[1]?.trim() || 'Kh√¥ng r√µ';
      const den = (b.match(/<strong>ƒê·∫øn: <\/strong>(.*?)<\/p>/) || [])[1]?.trim() || 'Kh√¥ng r√µ';
      const lyDo = (b.match(/<strong>L√Ω do: <\/strong>(.*?)<\/p>/) || [])[1]?.trim() || 'Kh√¥ng r√µ';
      msg += `üìç Khu v·ª±c: ${khuVuc}\n‚è∞ ${tu} ‚Üí ${den}\nüîß L√Ω do: ${lyDo}\n---\n`;
    });

    return msg.trim();

  } catch (e) {
    return `‚ùå M√£ KH ${maKhachHang} - L·ªói khi g·ªçi API: ${e.toString()}`;
  }
}

// ======= G·ª¨I B√ÅO C√ÅO H√ÄNG NG√ÄY =======
function sendDiscordDailyCupDienReport() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const values = sheet.getRange('A:A').getValues();
  const maKHList = values.map(r => String(r[0] || '').trim()).filter(Boolean);

  if (maKHList.length === 0) {
    sendDiscordMessage('‚ÑπÔ∏è Kh√¥ng c√≥ m√£ kh√°ch h√†ng trong c·ªôt A.');
    return;
  }

  const today = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd/MM/yyyy');
  sendDiscordMessage(`üì∞ *B·∫Øt ƒë·∫ßu tra c·ª©u l·ªãch c√∫p ƒëi·ªán ng√†y ${today} cho ${maKHList.length} m√£ KH...*`);
  Utilities.sleep(1500);

  for (const maKH of maKHList) {
    const result = getLichCupDien(maKH);
    sendDiscordMessage(result);
    Utilities.sleep(2000); // tr√°nh spam server
  }

  sendDiscordMessage('üì¢ *Ho√†n t·∫•t tra c·ª©u l·ªãch c√∫p ƒëi·ªán h√¥m nay.*');
}

// ======= TRIGGER H√ÄNG NG√ÄY L√öC 8h =======
function createDailyTrigger() {
  deleteDailyTrigger();
  ScriptApp.newTrigger('sendDiscordDailyCupDienReport').timeBased().everyDays(1).atHour(8).create();
  SpreadsheetApp.getUi().alert('‚úÖ ƒê√£ b·∫≠t g·ª≠i l·ªãch c√∫p ƒëi·ªán h√†ng ng√†y l√∫c 8h s√°ng.');
}

function deleteDailyTrigger() {
  const triggers = ScriptApp.getProjectTriggers();
  for (const t of triggers) {
    if (t.getHandlerFunction() === 'sendDiscordDailyCupDienReport') {
      ScriptApp.deleteTrigger(t);
    }
  }
  SpreadsheetApp.getUi().alert('üóëÔ∏è ƒê√£ x√≥a Trigger g·ª≠i h√†ng ng√†y.');
}

// ======= TH√äM MENU V√ÄO GOOGLE SHEET =======
function onOpen() {
  SpreadsheetApp.getUi().createMenu('L·ªãch C√∫p ƒêi·ªán')
    .addItem('G·ª≠i b√°o c√°o h√¥m nay l√™n Discord', 'sendDiscordDailyCupDienReport')
    .addSeparator()
    .addItem('B·∫≠t g·ª≠i h√†ng ng√†y l√∫c 8h', 'createDailyTrigger')
    .addItem('T·∫Øt g·ª≠i h√†ng ng√†y', 'deleteDailyTrigger')
    .addToUi();
}